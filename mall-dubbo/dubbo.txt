==========================揭开dubbo的神秘面纱(上)============================
1.为什么需要Dubbo
2.Dubbo的架构
3.Dubbo的使用
4.Dubbo注册中心原理
5.如何快速启动Dubbo服务
6.多协议支持
7.多注册中心支持

地址维护
负载均衡
限流/容错/降级
监控


服务之间需要通信，如何实现服务的调用

使用dubbo发布服务的时候如果没有配置注册中心，在发布服务的时候需要配置url


=============================揭开dubbo的神秘面纱(下)-==========================

Dubbo支持的容器
Spring
Jetty

默认情况下会使用spring容器启动服务

Dubbo的多协议支持
RMI
Hessian
webservice
http
thirft
dubbo(默认)



对server端进行水平扩容，根据负载均衡算法进行路由

=========================分布式服务治理dubbo常用配置及源码分析(上)====================

多版本支持
-----version

主机绑定



集群容错：
6中容错机制

failsafe 失败安全   可以认为是把失败吞掉
failover(默认)  重试其他的服务器  retries：重试次数默认是2
failfast(快速失败)  失败之后立马报错
failback(失败之后自动恢复)
forking(并行调用多个服务)  forks来设置并行的最大数
broadcast  广播  任意一台报错，则执行的方法报错

通过cluster来配置


配置的优先级别：

---------
调用方优于提供方，方法级别优先，接口，全局
如果级别是一样的，客户端优先

reties，loadBalance,cluster(客户端),timeout(服务端)



服务降级
---------
降级的目的是为了保证核心的服务可用

可以使用Mock


找工作的时候比较看中哪一点？
自己的规划是什么？
有什么优势？


什么是SPI
--------
1.META-INF/services/接口的全路径


===============================Dubbo的可扩展机制源码解析=============================

源码阅读之Dubbo中的SPI机制分析

Dubbo的SPI的规范
1.
META-INF/dubbo
META-INF/services
META-INF/internal
2.文件名(全路径)



源码阅读之Dubbo服务发布过程分析

Dubbo的SPI中还包含两种功能
自动注入，AOP

export：导出
refer：导入

==========================Dubbo服务导出(服务注册与服务暴露)源码解析============================

DubboNamespaceHandler


==================================分布式服务治理dubbo源码分析（上======================
课程目标：
1.源码分析之Dubbo  Extension扩展点
  @Adaptive
  如果这个注解在方法层面上，会动态生成一个自适应的适配器，如果是在类级别上，表示直接加载自定义的自适应适配器

2.源码分析之服务发布及注册流程

NamespaceHandler:
BeanDefinitionParse:

有一个约定会加载/META-INF/spring.handlers这个文件

启动(注册)一个服务的时候做了什么事情(调用注册中心发布服务到zookeeper)，启动一个netty服务


Invoker是什么？

会话的建立过程？

MockClusterInvoker






3.源码分析之消费端初始化流程






4.源码分析之服务调用过程






5.源码分析之什么是Directory





6.源码分析之什么是Cluster




7.源码分析之LoadBalance



=====================================分布式服务治理dubbo源码分析=======================



